double funcao(double c[], double x)
{
    return c[0] * cos(c[1] * x) + c[2] * sin(c[3] * x) + exp(c[4] * x) + c[5];
}

void bissecao(double c[], double a, double b, unsigned int Nmax, double e1, double e2)
{
    double x = 0;
    unsigned int k = 0;

    for(k = 1; !(fabs(a - b) < e1 && fabs(funcao(c, (a + b) / 2.0)) < e2) && k <= Nmax; k++)
    {
        x = (a + b) / 2.0;

        if((funcao(c, a) * funcao(c, x)) < 0)
        {
            b = x;
        }
        else
        {
            a = x;
        }


        printf("Metodo: Bissecao\n");
        printf("Iteracao: %u\n", k);

        if(fabs(a - b) < e1 && fabs(funcao(c, (a + b) / 2.0)) < e2)
        {
            printf("CONVERGIU\n");
        }
        else
        {
            printf("NAO CONVERGIU\n");
        }

        printf("Raiz final:%.10f\n", x);
        printf("|a-b|:%.10f\n", fabs(a - b));
        printf("|f(x_i)|:%.10f\n\n", fabs(funcao(c, x)));
    }
}

void secante(double c[], double a, double b, unsigned int Nmax, double e1, double e2)
{
    //a = x0, b = x1
    double x = 0;
    unsigned int k = 0;

    for(k = 1; !(fabs(b - a) < e1 && fabs(funcao(c, b)) < e2) && k <= Nmax; k++)
    {
        x = b - funcao(c, b) / (funcao(c, b) - funcao(c, a)) * (b - a);

        a = b;
        b = x;
        //b = x_i, a = x_(i-1)

        printf("Metodo: Secantes\n");
        printf("Iteracao: %u\n", k);

        if(fabs(b - a) < e1 && fabs(funcao(c, b)) < e2)
        {
            printf("CONVERGIU\n");
        }
        else
        {
            printf("NAO CONVERGIU\n");
        }

        printf("Raiz final:%.10f\n", x);
        printf("|x_i-x_(i-1)|:%.10f\n", fabs(b - a));
        printf("|f(x_i)|:%.10f\n\n", fabs(funcao(c, x)));
    }
}

int main()
{
    double c[6] = {0}, e1 = 0, e2 = 0, a = 0, b = 0;
    unsigned short int i = 0, M = 0;
    unsigned int Nmax = 0;


    scanf("%hu", &M); //Método que vai ser usado: 1 - Bisseção, 2 - Secante

    for(; i < 6; i++) //Constantes da função
    {
        scanf("%lf", &c[i]);
    }

    scanf("%u", &Nmax); //Número Máximo de iterações
    scanf("%lf", &e1);  //Erro mínimo em |xi − xi−1|
    scanf("%lf", &e2);  //Erro máximo em |f(xi)|
    scanf("%lf %lf", &a, &b); //Intervalo [a,b]


    if(funcao(c, a) * funcao(c, b) >= 0) //Teste do teorema de Bolzano
    {
        printf("Bolzano falhou!\n");
        return 0;
    }


    switch(M)
    {
        case 1:
            bissecao(c, a, b, Nmax, e1, e2);
            break;
        case 2:
            secante(c, a, b, Nmax, e1, e2);
            break;
        default:
            return 0;
    }

    return 0;
}
